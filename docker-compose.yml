version: '3'

services:
  postgres:
    image: postgres:alpine
    restart: unless-stopped
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: unless-stopped
    expose:
      - 6379

  backend:
    image: ghcr.io/espcd/espcd-backend
    restart: unless-stopped
    expose:
      - 3000
    environment:
      - ESPCD_BACKEND_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - VIRTUAL_HOST=${BACKEND_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${BACKEND_HOST}
    volumes:
      - storage:/app/storage
    command: sh -c "rake db:create && rake db:migrate && rake db:seed && rails s -b 0.0.0.0"
    depends_on:
      - postgres
      - redis

  frontend:
    image: ghcr.io/espcd/espcd-frontend
    restart: unless-stopped
    expose:
      - 80
    environment:
      - VIRTUAL_HOST=${FRONTEND_HOST},www.${FRONTEND_HOST}
      - LETSENCRYPT_HOST=${FRONTEND_HOST},www.${FRONTEND_HOST}

  proxy:
    build: ./proxy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt-companion:
    image: nginxproxy/acme-companion
    restart: unless-stopped
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    depends_on:
      - proxy

volumes:
  postgres:
  storage:
  certs:
  vhost.d:
  html:
  acme:
